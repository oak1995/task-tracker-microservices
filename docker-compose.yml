services:
  # PostgreSQL для auth-service
  auth-db:
    image: postgres:13
    container_name: auth-db
    environment:
      POSTGRES_DB: auth_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    networks:
      - task-tracker-network

  # PostgreSQL для task-service
  task-db:
    image: postgres:13
    container_name: task-db
    environment:
      POSTGRES_DB: task_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - task_db_data:/var/lib/postgresql/data
    networks:
      - task-tracker-network

  # PostgreSQL для audit-service
  audit-db:
    image: postgres:13
    container_name: audit-db
    environment:
      POSTGRES_DB: audit_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    volumes:
      - audit_db_data:/var/lib/postgresql/data
    networks:
      - task-tracker-network

  # PostgreSQL для notification-service
  notification-db:
    image: postgres:13
    container_name: notification-db
    environment:
      POSTGRES_DB: notificationdb
      POSTGRES_USER: notification_user
      POSTGRES_PASSWORD: notification_password
    ports:
      - "5435:5432"
    volumes:
      - notification_db_data:/var/lib/postgresql/data
    networks:
      - task-tracker-network

  # Redis для кэширования
  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - task-tracker-network

  # Kafka для межсервисной коммуникации
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - task-tracker-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - task-tracker-network

  # Eureka Service Discovery
  eureka-server:
    image: steeltoeoss/eureka-server:latest
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      - EUREKA_CLIENT_REGISTER_WITH_EUREKA=false
      - EUREKA_CLIENT_FETCH_REGISTRY=false
    networks:
      - task-tracker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Микросервисы
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    container_name: auth-service
    ports:
      - "8081:8081"
    depends_on:
      - auth-db
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - task-tracker-network

  task-service:
    build:
      context: ./task-service
      dockerfile: Dockerfile
    container_name: task-service
    ports:
      - "8082:8082"
    depends_on:
      - task-db
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - task-tracker-network

  audit-service:
    build:
      context: ./audit-service
      dockerfile: Dockerfile
    container_name: audit-service
    ports:
      - "8083:8083"
    depends_on:
      - audit-db
      - kafka
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
    networks:
      - task-tracker-network

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8084:8084"
    depends_on:
      - notification-db
      - redis
      - kafka
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWT_SECRET: ${JWT_SECRET:-notification-service-secret-key-for-jwt-token-validation-docker-environment}
      MAIL_USERNAME: ${MAIL_USERNAME:-your-email@gmail.com}
      MAIL_PASSWORD: ${MAIL_PASSWORD:-your-app-password}
      NOTIFICATION_EMAIL_FROM: ${NOTIFICATION_EMAIL_FROM:-noreply@tasktracker.com}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      MANAGEMENT_HEALTH_MAIL_ENABLED: false
    networks:
      - task-tracker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8084/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  gateway-service:
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    container_name: gateway-service
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - task-service
      - audit-service
      - notification-service
      - redis
      - eureka-server
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWT_SECRET: ${JWT_SECRET:-gateway-service-secret-key-for-jwt-token-validation-docker-environment}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-}
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    networks:
      - task-tracker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  auth_db_data:
  task_db_data:
  audit_db_data:
  notification_db_data:

networks:
  task-tracker-network:
    driver: bridge 